트랜잭션 AOP 주의사항 - 프록시 내부 호출 1

@Transactional을 사용하면 스프링의 트랜잭션 AOP가 적용 된다.
트랜잭션 AOP 는 기본적으로 프록시 방식의 AOP를 사용한다.

프록시 객체가 요청을 먼저 받아 트랜잭션을 처리하고 실제 객채를 호출한다.
트랜잭션을 적용하려면 항상 프록시를 통해서 대상 객체 호출을 해야한다. 
이렇게 해야 프록시에게 먼저 트랜잭션을 적용하고, 이후에 대상객체를 호출한다.
만약 프록시를 거치지 않으면, AOP가 적용되지않고, 트랜잭션도 적용되지 않는다.

스프링은 의존관계 주입시에 항상 프록시 객체를 주입한다.
대상 객체를 직접 호출하는 문제는 일반적으로 발생하지 않는다.

"객체의 내부에서 메서드 호출이 발행사면 프록시를 거치지 않고 대상객체를 직접호출하는 문제가 발생한다."

트랜잭션 사용 할때 어떤걸 주의 해야하냐 라는 질문 많이 나옴




public class InternalCallV1Test {
  @Autowired
  CallService callService;
  
  @Test
  public void test() {
    callService.external(); //트랜잭션 시작했다 라는 로그 안찍힘
  }
  
  @TestConfiguration
  static class InternalCallV1TestConfig {
    @Bean
    public CallService callService {
      return new CallService();
    }
  }
  static class CallService {
    public void external(){
      printTxinfo();
      internal();
    }
    @Transactional
    public void internal() {
      printTxInfo();
    }
  }
}
